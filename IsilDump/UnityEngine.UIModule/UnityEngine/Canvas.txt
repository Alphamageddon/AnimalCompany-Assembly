Type: UnityEngine.Canvas

Method: System.Void add_preWillRenderCanvases(UnityEngine.Canvas/WillRenderCanvases value)

Disassembly:
	0x03E251D4 TBZ X0, 0x0, 0x3E251EC
	0x03E251D8 CBNZ W21, 0x3E251F0
	0x03E251DC ADRP X8, 0xFFFFFFFFFDDF0000
	0x03E251E0 ADD X8, X8, 0x5C
	0x03E251E4 STR X8, [X19 + 0x18]
	0x03E251E8 B 0x3E25200
	0x03E251EC CBZ X20, 0x3E25218
	0x03E251F0 LDR X8, [X19 + 0x10]
	0x03E251F4 LDR X9, [X19 + 0x20]
	0x03E251F8 STR X8, [X19 + 0x18]
	0x03E251FC STR X9, [X19 + 0x40]
	0x03E25200 ADRP X8, 0xFFFFFFFFFDDF0000
	0x03E25204 ADD X8, X8, 0x1C
	0x03E25208 STR X8, [X19 + 0x38]
	0x03E2520C LDP X20, X19, [X31 + 0x10]
	0x03E25210 LDP X30, X21, [X31], #0x20
	0x03E25214 RET
	0x03E25218 ADRP X1, 0xFFFFFFFFFCCF6000
	0x03E2521C ADD X1, X1, 0xEE3
	0x03E25220 MOV X0, X31
	0x03E25224 BL 0x1C16F3C
	0x03E25228 MOV X1, X31
	0x03E2522C BL 0x1C16DEC
	0x03E25230 LDR X8, [X0 + 0x40]
	0x03E25234 LDR X2, [X0 + 0x18]
	0x03E25238 LDR X1, [X0 + 0x28]
	0x03E2523C MOV X0, X8
	0x03E25240 BR X2
	0x03E25244 STR X30, [X31 - 0x20]!
	0x03E25248 STP X20, X19, [X31 + 0x10]
	0x03E2524C ADRP X20, 0x5C3000
	0x03E25250 LDR X1, [X20 + 0x6A0]
	0x03E25254 MOV W19, W0
	0x03E25258 CBNZ X1, 0x3E25270
	0x03E2525C ADRP X0, 0xFFFFFFFFFCCF0000
	0x03E25260 ADD X0, X0, 0x54E
	0x03E25264 BL 0x1C16CB8
	0x03E25268 MOV X1, X0
	0x03E2526C STR X0, [X20 + 0x6A0]
	0x03E25270 MOV W0, W19
	0x03E25274 LDP X20, X19, [X31 + 0x10]
	0x03E25278 LDR X30, [X31], #0x20
	0x03E2527C BR X1
	0x03E25280 STR X30, [X31 - 0x20]!
	0x03E25284 STP X20, X19, [X31 + 0x10]
	0x03E25288 ADRP X20, 0x5C3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5C4000
	007 Move X21, 0x33E000
	008 Move W8, [X20+1400]
	009 Move X21, [X21+1192]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x33E000
	016 Move X0, [X0+1192]
	017 Call 0x1C17CF4
	018 Move X0, 0x335000
	019 Move X0, [X0+1072]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1400], W8
	023 Move X8, [X21]
	024 Move X22, 0x335000
	025 Move X8, [X8+184]
	026 Move X20, [X8]
	027 Move X22, [X22+1072]
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call Delegate.Combine, X0, X1
	032 Move X8, X0
	033 Compare X0, 0
	034 JumpIfEqual {38}
	035 Move X1, [X22]
	036 Move X9, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X21]
	039 Move X1, X8
	040 Move X2, X20
	041 Move X0, [X9+184]
	042 Call 0x1C25138
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, X0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move X0, X8
	052 Call 0x1C181E0

Method: System.Void remove_preWillRenderCanvases(UnityEngine.Canvas/WillRenderCanvases value)

Disassembly:
	0x03E2528C LDR X1, [X20 + 0x6A8]
	0x03E25290 MOV W19, W0
	0x03E25294 CBNZ X1, 0x3E252AC
	0x03E25298 ADRP X0, 0xFFFFFFFFFCD00000
	0x03E2529C ADD X0, X0, 0xAF7
	0x03E252A0 BL 0x1C16CB8
	0x03E252A4 MOV X1, X0
	0x03E252A8 STR X0, [X20 + 0x6A8]
	0x03E252AC MOV W0, W19
	0x03E252B0 LDP X20, X19, [X31 + 0x10]
	0x03E252B4 LDR X30, [X31], #0x20
	0x03E252B8 BR X1
	0x03E252BC STP X30, X21, [X31 - 0x20]!
	0x03E252C0 STP X20, X19, [X31 + 0x10]
	0x03E252C4 ADRP X21, 0x5C3000
	0x03E252C8 LDR X2, [X21 + 0x6B0]
	0x03E252CC MOV X19, X1
	0x03E252D0 MOV X20, X0
	0x03E252D4 CBNZ X2, 0x3E252EC
	0x03E252D8 ADRP X0, 0xFFFFFFFFFCCF6000
	0x03E252DC ADD X0, X0, 0x88B
	0x03E252E0 BL 0x1C16CB8
	0x03E252E4 MOV X2, X0
	0x03E252E8 STR X0, [X21 + 0x6B0]
	0x03E252EC MOV X0, X20
	0x03E252F0 MOV X1, X19
	0x03E252F4 LDP X20, X19, [X31 + 0x10]
	0x03E252F8 LDP X30, X21, [X31], #0x20
	0x03E252FC BR X2
	0x03E25300 STP X30, X21, [X31 - 0x20]!
	0x03E25304 STP X20, X19, [X31 + 0x10]
	0x03E25308 ADRP X19, 0x5C3000
	0x03E2530C ADRP X20, 0x2F5000
	0x03E25310 LDRB W8, [X19 + 0x6BB]
	0x03E25314 LDR X20, [X20 + 0xDF8]
	0x03E25318 TBNZ X8, 0x0, 0x3E2533C
	0x03E2531C ADRP X0, 0x2F5000
	0x03E25320 LDR X0, [X0 + 0xDF8]
	0x03E25324 BL 0x1C16CF4
	0x03E25328 ADRP X0, 0x2CE000
	0x03E2532C LDR X0, [X0 + 0x598]
	0x03E25330 BL 0x1C16CF4
	0x03E25334 MOVZ W8, 0x1
	0x03E25338 STRB W8, [X19 + 0x6BB]
	0x03E2533C LDR X0, [X20]
	0x03E25340 ADRP X21, 0x2CE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5C4000
	007 Move X21, 0x33E000
	008 Move W8, [X20+1401]
	009 Move X21, [X21+1192]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x33E000
	016 Move X0, [X0+1192]
	017 Call 0x1C17CF4
	018 Move X0, 0x335000
	019 Move X0, [X0+1072]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1401], W8
	023 Move X8, [X21]
	024 Move X22, 0x335000
	025 Move X8, [X8+184]
	026 Move X20, [X8]
	027 Move X22, [X22+1072]
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call Delegate.Remove, X0, X1
	032 Move X8, X0
	033 Compare X0, 0
	034 JumpIfEqual {38}
	035 Move X1, [X22]
	036 Move X9, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X21]
	039 Move X1, X8
	040 Move X2, X20
	041 Move X0, [X9+184]
	042 Call 0x1C25138
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, X0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move X0, X8
	052 Call 0x1C181E0

Method: System.Void add_willRenderCanvases(UnityEngine.Canvas/WillRenderCanvases value)

Disassembly:
	0x03E25344 LDR W8, [X0 + 0xE0]
	0x03E25348 LDR X21, [X21 + 0x598]
	0x03E2534C CBNZ W8, 0x3E25354
	0x03E25350 BL 0x1C16DFC
	0x03E25354 MOV X0, X31
	0x03E25358 BL 0x3E4FF90
	0x03E2535C LDR X8, [X21]
	0x03E25360 MOV X19, X0
	0x03E25364 LDR W9, [X8 + 0xE0]
	0x03E25368 CBNZ W9, 0x3E25374
	0x03E2536C MOV X0, X8
	0x03E25370 BL 0x1C16DFC
	0x03E25374 MOV X0, X19
	0x03E25378 MOV X1, X31
	0x03E2537C BL 0x3C38948
	0x03E25380 TBZ X0, 0x0, 0x3E253FC
	0x03E25384 LDR X0, [X20]
	0x03E25388 LDR W8, [X0 + 0xE0]
	0x03E2538C CBNZ W8, 0x3E25394
	0x03E25390 BL 0x1C16DFC
	0x03E25394 MOV X0, X31
	0x03E25398 BL 0x3E4FF90
	0x03E2539C CBZ X0, 0x3E2540C
	0x03E253A0 LDR X8, [X21]
	0x03E253A4 LDR X19, [X0 + 0x28]
	0x03E253A8 LDR W9, [X8 + 0xE0]
	0x03E253AC CBNZ W9, 0x3E253B8
	0x03E253B0 MOV X0, X8
	0x03E253B4 BL 0x1C16DFC
	0x03E253B8 MOV X0, X19
	0x03E253BC MOV X1, X31
	0x03E253C0 BL 0x3C38948
	0x03E253C4 TBZ X0, 0x0, 0x3E253FC
	0x03E253C8 LDR X0, [X20]
	0x03E253CC LDR W8, [X0 + 0xE0]
	0x03E253D0 CBNZ W8, 0x3E253D8
	0x03E253D4 BL 0x1C16DFC
	0x03E253D8 MOV X0, X31
	0x03E253DC BL 0x3E4FF90
	0x03E253E0 CBZ X0, 0x3E2540C
	0x03E253E4 LDR X0, [X0 + 0x28]
	0x03E253E8 CBZ X0, 0x3E2540C
	0x03E253EC LDP X20, X19, [X31 + 0x10]
	0x03E253F0 MOV X1, X31
	0x03E253F4 LDP X30, X21, [X31], #0x20
	0x03E253F8 B 0x3E53F58
	0x03E253FC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5C4000
	007 Move X21, 0x33E000
	008 Move W8, [X20+1402]
	009 Move X21, [X21+1192]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x33E000
	016 Move X0, [X0+1192]
	017 Call 0x1C17CF4
	018 Move X0, 0x335000
	019 Move X0, [X0+1072]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1402], W8
	023 Move X8, [X21]
	024 Move X22, 0x335000
	025 Move X8, [X8+184]
	026 Move X20, [X8+8]
	027 Move X22, [X22+1072]
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call Delegate.Combine, X0, X1
	032 Move X8, X0
	033 Compare X0, 0
	034 JumpIfEqual {38}
	035 Move X1, [X22]
	036 Move X9, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X21]
	039 Move X1, X8
	040 Move X2, X20
	041 Move X9, [X9+184]
	042 Add X0, X9, 8
	043 Call 0x1C25138
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, X0
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Move X0, X8
	053 Call 0x1C181E0

Method: System.Void remove_willRenderCanvases(UnityEngine.Canvas/WillRenderCanvases value)

Disassembly:
	0x03E25400 MOV X0, X31
	0x03E25404 LDP X30, X21, [X31], #0x20
	0x03E25408 RET
	0x03E2540C BL 0x1C16F20
	0x03E25410 STR X30, [X31 - 0x20]!
	0x03E25414 STP X20, X19, [X31 + 0x10]
	0x03E25418 ADRP X20, 0x5C3000
	0x03E2541C ADRP X19, 0x2CE000
	0x03E25420 LDRB W8, [X20 + 0x6BC]
	0x03E25424 LDR X19, [X19 + 0x598]
	0x03E25428 TBNZ X8, 0x0, 0x3E25440
	0x03E2542C ADRP X0, 0x2CE000
	0x03E25430 LDR X0, [X0 + 0x598]
	0x03E25434 BL 0x1C16CF4
	0x03E25438 MOVZ W8, 0x1
	0x03E2543C STRB W8, [X20 + 0x6BC]
	0x03E25440 BL 0x3E25300
	0x03E25444 LDR X8, [X19]
	0x03E25448 MOV X19, X0
	0x03E2544C LDR W9, [X8 + 0xE0]
	0x03E25450 CBNZ W9, 0x3E2545C
	0x03E25454 MOV X0, X8
	0x03E25458 BL 0x1C16DFC
	0x03E2545C MOV X0, X19
	0x03E25460 MOV X1, X31
	0x03E25464 MOV X2, X31
	0x03E25468 BL 0x3C354F8
	0x03E2546C TBZ X0, 0x0, 0x3E25490
	0x03E25470 BL 0x3E25300
	0x03E25474 CBZ X0, 0x3E254A0
	0x03E25478 LDR X8, [X0]
	0x03E2547C LDP X20, X19, [X31 + 0x10]
	0x03E25480 LDR X2, [X8 + 0x248]
	0x03E25484 LDR X1, [X8 + 0x250]
	0x03E25488 LDR X30, [X31], #0x20
	0x03E2548C BR X2
	0x03E25490 LDP X20, X19, [X31 + 0x10]
	0x03E25494 MOV X0, X31
	0x03E25498 LDR X30, [X31], #0x20
	0x03E2549C B 0x3C84EF4
	0x03E254A0 BL 0x1C16F20
	0x03E254A4 STR X30, [X31 - 0x60]!
	0x03E254A8 STP X28, X27, [X31 + 0x10]
	0x03E254AC STP X26, X25, [X31 + 0x20]
	0x03E254B0 STP X24, X23, [X31 + 0x30]
	0x03E254B4 STP X22, X21, [X31 + 0x40]
	0x03E254B8 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5C4000
	007 Move X21, 0x33E000
	008 Move W8, [X20+1403]
	009 Move X21, [X21+1192]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x33E000
	016 Move X0, [X0+1192]
	017 Call 0x1C17CF4
	018 Move X0, 0x335000
	019 Move X0, [X0+1072]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1403], W8
	023 Move X8, [X21]
	024 Move X22, 0x335000
	025 Move X8, [X8+184]
	026 Move X20, [X8+8]
	027 Move X22, [X22+1072]
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call Delegate.Remove, X0, X1
	032 Move X8, X0
	033 Compare X0, 0
	034 JumpIfEqual {38}
	035 Move X1, [X22]
	036 Move X9, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X21]
	039 Move X1, X8
	040 Move X2, X20
	041 Move X9, [X9+184]
	042 Add X0, X9, 8
	043 Call 0x1C25138
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, X0
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Move X0, X8
	053 Call 0x1C181E0

Method: UnityEngine.RenderMode get_renderMode()

Disassembly:
	0x03E254BC ADRP X28, 0x5C3000
	0x03E254C0 ADRP X20, 0x345000
	0x03E254C4 ADRP X27, 0x345000
	0x03E254C8 ADRP X26, 0x345000
	0x03E254CC ADRP X25, 0x2D0000
	0x03E254D0 ADRP X23, 0x2CE000
	0x03E254D4 ADRP X22, 0x334000
	0x03E254D8 ADRP X21, 0x333000
	0x03E254DC LDR X20, [X20 + 0xF00]
	0x03E254E0 LDR X27, [X27 + 0xF08]
	0x03E254E4 LDRB W8, [X28 + 0x6BD]
	0x03E254E8 LDR X26, [X26 + 0xF10]
	0x03E254EC LDR X25, [X25 + 0x278]
	0x03E254F0 LDR X23, [X23 + 0x988]
	0x03E254F4 LDR X22, [X22 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1408]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53604352
	010 Add X0, X0, 3022
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1408], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_renderMode(UnityEngine.RenderMode value)

Disassembly:
	0x03E254F8 LDR X21, [X21 + 0xA58]
	0x03E254FC MOV X19, X0
	0x03E25500 ADD X24, X0, 0x158
	0x03E25504 TBNZ X8, 0x0, 0x3E25564
	0x03E25508 ADRP X0, 0x345000
	0x03E2550C LDR X0, [X0 + 0xF08]
	0x03E25510 BL 0x1C16CF4
	0x03E25514 ADRP X0, 0x334000
	0x03E25518 LDR X0, [X0 + 0x20]
	0x03E2551C BL 0x1C16CF4
	0x03E25520 ADRP X0, 0x345000
	0x03E25524 LDR X0, [X0 + 0xF10]
	0x03E25528 BL 0x1C16CF4
	0x03E2552C ADRP X0, 0x333000
	0x03E25530 LDR X0, [X0 + 0xA58]
	0x03E25534 BL 0x1C16CF4
	0x03E25538 ADRP X0, 0x2D0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1416]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53579776
	012 Add X0, X0, 3171
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1416], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_isRootCanvas()

Disassembly:
	0x03E2553C LDR X0, [X0 + 0x278]
	0x03E25540 BL 0x1C16CF4
	0x03E25544 ADRP X0, 0x345000
	0x03E25548 LDR X0, [X0 + 0xF00]
	0x03E2554C BL 0x1C16CF4
	0x03E25550 ADRP X0, 0x2CE000
	0x03E25554 LDR X0, [X0 + 0x988]
	0x03E25558 BL 0x1C16CF4
	0x03E2555C MOVZ W8, 0x1
	0x03E25560 STRB W8, [X28 + 0x6BD]
	0x03E25564 MOVZ W8, 0x2A
	0x03E25568 STRH W8, [X19 + 0x120]
	0x03E2556C LDR X0, [X20]
	0x03E25570 BL 0x1C16F10
	0x03E25574 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1424]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53620736
	010 Add X0, X0, 2793
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1424], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Rect get_pixelRect()

Disassembly:
	0x03E25578 BL 0x3E25640
	0x03E2557C STR X20, [X19 + 0x138]
	0x03E25580 LDR X0, [X27]
	0x03E25584 BL 0x1C16F10
	0x03E25588 MOV X20, X0
	0x03E2558C BL 0x3E25688
	0x03E25590 STR X20, [X19 + 0x140]
	0x03E25594 LDR X0, [X26]
	0x03E25598 BL 0x1C16F10
	0x03E2559C MOV X20, X0
	0x03E255A0 BL 0x3E256D0
	0x03E255A4 ADRP X8, 0xFFFFFFFFFCCC7000
	0x03E255A8 LDR V0, [X8 + 0x91]
	0x03E255AC ADRP X8, 0xFFFFFFFFFCCC7000
	0x03E255B0 LDR V1, [X8 + 0xEE]
	0x03E255B4 STR X20, [X19 + 0x148]
	0x03E255B8 STR V0, [X24]
	0x03E255BC MOVZ X9, 0x999A
	0x03E255C0 STUR V1, [X24 + 0x14]
	0x03E255C4 LDR X8, [X25]
	0x03E255C8 MOVK X9, 0x3F590000
	0x03E255CC MOVK X9, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5C4000
	007 Move X8, [X20+1680]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -53547008
	013 Add X0, X0, 1946
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+1680], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Single get_scaleFactor()

Disassembly:
	0x03E25614 MOV X0, X19
	0x03E25618 MOV X1, X31
	0x03E2561C BL 0x3E3B678
	0x03E25620 MOV X0, X19
	0x03E25624 LDP X20, X19, [X31 + 0x50]
	0x03E25628 LDP X22, X21, [X31 + 0x40]
	0x03E2562C LDP X24, X23, [X31 + 0x30]
	0x03E25630 LDP X26, X25, [X31 + 0x20]
	0x03E25634 LDP X28, X27, [X31 + 0x10]
	0x03E25638 LDR X30, [X31], #0x60
	0x03E2563C B 0x3E25718
	0x03E25640 STP X30, X21, [X31 - 0x20]!
	0x03E25644 STP X20, X19, [X31 + 0x10]
	0x03E25648 ADRP X20, 0x5C3000
	0x03E2564C ADRP X21, 0x2FA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1432]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53604352
	010 Add X0, X0, 3059
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1432], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_scaleFactor(System.Single value)

Disassembly:
	0x03E25650 LDRB W8, [X20 + 0x707]
	0x03E25654 LDR X21, [X21 + 0xCA0]
	0x03E25658 MOV X19, X0
	0x03E2565C TBNZ X8, 0x0, 0x3E25674
	0x03E25660 ADRP X0, 0x2FA000
	0x03E25664 LDR X0, [X0 + 0xCA0]
	0x03E25668 BL 0x1C16CF4
	0x03E2566C MOVZ W8, 0x1
	0x03E25670 STRB W8, [X20 + 0x707]
	0x03E25674 LDR X1, [X21]
	0x03E25678 MOV X0, X19
	0x03E2567C LDP X20, X19, [X31 + 0x10]
	0x03E25680 LDP X30, X21, [X31], #0x20
	0x03E25684 B 0x2729B5C
	0x03E25688 STP X30, X21, [X31 - 0x20]!
	0x03E2568C STP X20, X19, [X31 + 0x10]
	0x03E25690 ADRP X20, 0x5C3000
	0x03E25694 ADRP X21, 0x2FA000
	0x03E25698 LDRB W8, [X20 + 0x708]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X1, [X20+1440]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53506048
	012 Add X0, X0, 2294
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1440], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Single get_referencePixelsPerUnit()

Disassembly:
	0x03E2569C LDR X21, [X21 + 0xCA0]
	0x03E256A0 MOV X19, X0
	0x03E256A4 TBNZ X8, 0x0, 0x3E256BC
	0x03E256A8 ADRP X0, 0x2FA000
	0x03E256AC LDR X0, [X0 + 0xCA0]
	0x03E256B0 BL 0x1C16CF4
	0x03E256B4 MOVZ W8, 0x1
	0x03E256B8 STRB W8, [X20 + 0x708]
	0x03E256BC LDR X1, [X21]
	0x03E256C0 MOV X0, X19
	0x03E256C4 LDP X20, X19, [X31 + 0x10]
	0x03E256C8 LDP X30, X21, [X31], #0x20
	0x03E256CC B 0x2729B5C
	0x03E256D0 STP X30, X21, [X31 - 0x20]!
	0x03E256D4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1448]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53555200
	010 Add X0, X0, 2523
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1448], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_referencePixelsPerUnit(System.Single value)

Disassembly:
	0x03E256D8 ADRP X20, 0x5C3000
	0x03E256DC ADRP X21, 0x2FA000
	0x03E256E0 LDRB W8, [X20 + 0x709]
	0x03E256E4 LDR X21, [X21 + 0xCA0]
	0x03E256E8 MOV X19, X0
	0x03E256EC TBNZ X8, 0x0, 0x3E25704
	0x03E256F0 ADRP X0, 0x2FA000
	0x03E256F4 LDR X0, [X0 + 0xCA0]
	0x03E256F8 BL 0x1C16CF4
	0x03E256FC MOVZ W8, 0x1
	0x03E25700 STRB W8, [X20 + 0x709]
	0x03E25704 LDR X1, [X21]
	0x03E25708 MOV X0, X19
	0x03E2570C LDP X20, X19, [X31 + 0x10]
	0x03E25710 LDP X30, X21, [X31], #0x20
	0x03E25714 B 0x2729B5C
	0x03E25718 STP X30, X21, [X31 - 0x20]!
	0x03E2571C STP X20, X19, [X31 + 0x10]
	0x03E25720 ADRP X21, 0x5C3000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X1, [X20+1456]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53645312
	012 Add X0, X0, 3623
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1456], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Boolean get_overridePixelPerfect()

Disassembly:
	0x03E25724 ADRP X20, 0x2CE000
	0x03E25728 LDRB W8, [X21 + 0x702]
	0x03E2572C LDR X20, [X20 + 0x598]
	0x03E25730 MOV X19, X0
	0x03E25734 TBNZ X8, 0x0, 0x3E2574C
	0x03E25738 ADRP X0, 0x2CE000
	0x03E2573C LDR X0, [X0 + 0x598]
	0x03E25740 BL 0x1C16CF4
	0x03E25744 MOVZ W8, 0x1
	0x03E25748 STRB W8, [X21 + 0x702]
	0x03E2574C LDR X0, [X20]
	0x03E25750 LDR X20, [X19 + 0x108]
	0x03E25754 LDR W8, [X0 + 0xE0]
	0x03E25758 CBNZ W8, 0x3E25760
	0x03E2575C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1464]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53686272
	010 Add X0, X0, 3208
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1464], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_overridePixelPerfect(System.Boolean value)

Disassembly:
	0x03E25760 MOV X0, X20
	0x03E25764 MOV X1, X31
	0x03E25768 MOV X2, X31
	0x03E2576C BL 0x3C354F8
	0x03E25770 TBZ X0, 0x0, 0x3E2579C
	0x03E25774 LDR X0, [X19 + 0x108]
	0x03E25778 CBZ X0, 0x3E257A8
	0x03E2577C LDR W8, [X19 + 0x128]
	0x03E25780 LDP X20, X19, [X31 + 0x10]
	0x03E25784 MOV X2, X31
	0x03E25788 SUB W8, W8, 0x1
	0x03E2578C CMP W8, 0x1
	0x03E25790 CSET W1, HI
	0x03E25794 LDP X30, X21, [X31], #0x20
	0x03E25798 B 0x3E4572C
	0x03E2579C LDP X20, X19, [X31 + 0x10]
	0x03E257A0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1472]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53489664
	012 Add X0, X0, 2293
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1472], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_pixelPerfect()

Disassembly:
	0x03E257A4 RET
	0x03E257A8 BL 0x1C16F20
	0x03E257AC STP X30, X21, [X31 - 0x20]!
	0x03E257B0 STP X20, X19, [X31 + 0x10]
	0x03E257B4 ADRP X21, 0x5C3000
	0x03E257B8 ADRP X20, 0x2CE000
	0x03E257BC LDRB W8, [X21 + 0x6BE]
	0x03E257C0 LDR X20, [X20 + 0x598]
	0x03E257C4 MOV X19, X0
	0x03E257C8 TBNZ X8, 0x0, 0x3E257EC
	0x03E257CC ADRP X0, 0x2D5000
	0x03E257D0 LDR X0, [X0 + 0x700]
	0x03E257D4 BL 0x1C16CF4
	0x03E257D8 ADRP X0, 0x2CE000
	0x03E257DC LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1480]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53678080
	010 Add X0, X0, 3484
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1480], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_planeDistance()

Disassembly:
	0x03E257E0 BL 0x1C16CF4
	0x03E257E4 MOVZ W8, 0x1
	0x03E257E8 STRB W8, [X21 + 0x6BE]
	0x03E257EC LDR X0, [X20]
	0x03E257F0 LDR X20, [X19 + 0x1C8]
	0x03E257F4 LDR W8, [X0 + 0xE0]
	0x03E257F8 CBNZ W8, 0x3E25800
	0x03E257FC BL 0x1C16DFC
	0x03E25800 MOV X0, X20
	0x03E25804 MOV X1, X31
	0x03E25808 MOV X2, X31
	0x03E2580C BL 0x3C3883C
	0x03E25810 TBZ X0, 0x0, 0x3E25838
	0x03E25814 ADRP X8, 0x2D5000
	0x03E25818 LDR X8, [X8 + 0x700]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1488]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53547008
	010 Add X0, X0, 1906
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1488], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_planeDistance(System.Single value)

Disassembly:
	0x03E2581C LDR X0, [X8]
	0x03E25820 BL 0x1C16F10
	0x03E25824 MOV X1, X31
	0x03E25828 MOV X20, X0
	0x03E2582C BL 0x3C17028
	0x03E25830 STR X20, [X19 + 0x1C8]
	0x03E25834 B 0x3E2583C
	0x03E25838 LDR X20, [X19 + 0x1C8]
	0x03E2583C MOV X0, X20
	0x03E25840 LDP X20, X19, [X31 + 0x10]
	0x03E25844 LDP X30, X21, [X31], #0x20
	0x03E25848 RET
	0x03E2584C STR X30, [X31 - 0x20]!
	0x03E25850 STP X20, X19, [X31 + 0x10]
	0x03E25854 ADRP X20, 0x5C3000
	0x03E25858 LDRB W8, [X20 + 0x6BF]
	0x03E2585C MOV X19, X0
	0x03E25860 TBNZ X8, 0x0, 0x3E25878
	0x03E25864 ADRP X0, 0x345000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X1, [X20+1496]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53694464
	012 Add X0, X0, 2844
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1496], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Int32 get_renderOrder()

Disassembly:
	0x03E25868 LDR X0, [X0 + 0xF18]
	0x03E2586C BL 0x1C16CF4
	0x03E25870 MOVZ W8, 0x1
	0x03E25874 STRB W8, [X20 + 0x6BF]
	0x03E25878 LDR X20, [X19 + 0x1B0]
	0x03E2587C CBNZ X20, 0x3E258A0
	0x03E25880 ADRP X8, 0x345000
	0x03E25884 LDR X8, [X8 + 0xF18]
	0x03E25888 LDR X0, [X8]
	0x03E2588C BL 0x1C16F10
	0x03E25890 MOV X1, X31
	0x03E25894 MOV X20, X0
	0x03E25898 BL 0x3CCE790
	0x03E2589C STR X20, [X19 + 0x1B0]
	0x03E258A0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1504]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53686272
	010 Add X0, X0, 3255
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1504], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_overrideSorting()

Disassembly:
	0x03E258A4 LDP X20, X19, [X31 + 0x10]
	0x03E258A8 LDR X30, [X31], #0x20
	0x03E258AC RET
	0x03E258B0 STR X30, [X31 - 0x30]!
	0x03E258B4 STP X22, X21, [X31 + 0x10]
	0x03E258B8 STP X20, X19, [X31 + 0x20]
	0x03E258BC ADRP X22, 0x5C3000
	0x03E258C0 ADRP X21, 0x33D000
	0x03E258C4 LDRB W8, [X22 + 0x6C0]
	0x03E258C8 LDR X21, [X21 + 0x590]
	0x03E258CC MOV W19, W1
	0x03E258D0 MOV X20, X0
	0x03E258D4 TBNZ X8, 0x0, 0x3E258EC
	0x03E258D8 ADRP X0, 0x33D000
	0x03E258DC LDR X0, [X0 + 0x590]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1512]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53645312
	010 Add X0, X0, 3685
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1512], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_overrideSorting(System.Boolean value)

Disassembly:
	0x03E258E0 BL 0x1C16CF4
	0x03E258E4 MOVZ W8, 0x1
	0x03E258E8 STRB W8, [X22 + 0x6C0]
	0x03E258EC LDR X2, [X21]
	0x03E258F0 ADD X0, X20, 0x12C
	0x03E258F4 AND W1, W19, 0x1
	0x03E258F8 LDP X20, X19, [X31 + 0x20]
	0x03E258FC LDP X22, X21, [X31 + 0x10]
	0x03E25900 LDR X30, [X31], #0x30
	0x03E25904 B 0x22541E0
	0x03E25908 STP X30, X21, [X31 - 0x20]!
	0x03E2590C STP X20, X19, [X31 + 0x10]
	0x03E25910 ADRP X20, 0x5C3000
	0x03E25914 ADRP X21, 0x2CE000
	0x03E25918 LDRB W8, [X20 + 0x6C1]
	0x03E2591C LDR X21, [X21 + 0x970]
	0x03E25920 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1520]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53497856
	012 Add X0, X0, 2525
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1520], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_sortingOrder()

Disassembly:
	0x03E25924 TBNZ X8, 0x0, 0x3E2593C
	0x03E25928 ADRP X0, 0x2CE000
	0x03E2592C LDR X0, [X0 + 0x970]
	0x03E25930 BL 0x1C16CF4
	0x03E25934 MOVZ W8, 0x1
	0x03E25938 STRB W8, [X20 + 0x6C1]
	0x03E2593C LDR X0, [X21]
	0x03E25940 LDR W8, [X0 + 0xE0]
	0x03E25944 CBNZ W8, 0x3E2594C
	0x03E25948 BL 0x1C16DFC
	0x03E2594C MOV X0, X31
	0x03E25950 BL 0x3C01AB0
	0x03E25954 MOV W8, W0
	0x03E25958 CMP W0, 0x1F
	0x03E2595C MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1528]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53497856
	010 Add X0, X0, 2581
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1528], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_sortingOrder(System.Int32 value)

Disassembly:
	0x03E25960 B.HI 0x3E25984
	0x03E25964 MOVZ W9, 0x900
	0x03E25968 LSLV W8, W0, W8
	0x03E2596C MOVK W9, 0x80000000
	0x03E25970 ANDS W31, W8, W9, 0x0
	0x03E25974 B.EQ 0x3E25984
	0x03E25978 LDRB W8, [X19 + 0x12C]
	0x03E2597C CMP W8, 0x0
	0x03E25980 CSET W0, NE
	0x03E25984 LDP X20, X19, [X31 + 0x10]
	0x03E25988 LDP X30, X21, [X31], #0x20
	0x03E2598C RET
	0x03E25990 AND W8, W1, 0x1
	0x03E25994 STRB W8, [X0 + 0x191]
	0x03E25998 RET
	0x03E2599C STR X30, [X31 - 0x20]!
	0x03E259A0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1536]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53465088
	012 Add X0, X0, 1650
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1536], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_targetDisplay()

Disassembly:
	0x03E259A4 ADRP X20, 0x5C3000
	0x03E259A8 LDRB W8, [X20 + 0x6C2]
	0x03E259AC MOV X19, X0
	0x03E259B0 TBNZ X8, 0x0, 0x3E259C8
	0x03E259B4 ADRP X0, 0x2CE000
	0x03E259B8 LDR X0, [X0 + 0x970]
	0x03E259BC BL 0x1C16CF4
	0x03E259C0 MOVZ W8, 0x1
	0x03E259C4 STRB W8, [X20 + 0x6C2]
	0x03E259C8 LDRB W8, [X19 + 0x191]
	0x03E259CC CBZ W8, 0x3E259FC
	0x03E259D0 ADRP X8, 0x2CE000
	0x03E259D4 LDR X8, [X8 + 0x970]
	0x03E259D8 LDR X0, [X8]
	0x03E259DC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1544]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53563392
	010 Add X0, X0, 3906
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1544], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_targetDisplay(System.Int32 value)

Disassembly:
	0x03E259E0 CBNZ W8, 0x3E259E8
	0x03E259E4 BL 0x1C16DFC
	0x03E259E8 MOV X0, X31
	0x03E259EC BL 0x3C01AB0
	0x03E259F0 CMP W0, 0x1F
	0x03E259F4 CSET W0, NE
	0x03E259F8 B 0x3E25A00
	0x03E259FC MOV W0, W31
	0x03E25A00 LDP X20, X19, [X31 + 0x10]
	0x03E25A04 LDR X30, [X31], #0x20
	0x03E25A08 RET
	0x03E25A0C LDR X0, [X0 + 0x180]
	0x03E25A10 RET
	0x03E25A14 MOVZ W2, 0x1
	0x03E25A18 B 0x3E25A1C
	0x03E25A1C SUB X31, X31, 0x60
	0x03E25A20 STP X30, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1552]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53497856
	012 Add X0, X0, 2620
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1552], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_sortingLayerID()

Disassembly:
	0x03E25A24 STP X26, X25, [X31 + 0x20]
	0x03E25A28 STP X24, X23, [X31 + 0x30]
	0x03E25A2C STP X22, X21, [X31 + 0x40]
	0x03E25A30 STP X20, X19, [X31 + 0x50]
	0x03E25A34 ADRP X22, 0x5C3000
	0x03E25A38 LDRB W8, [X22 + 0x6C3]
	0x03E25A3C MOV W20, W2
	0x03E25A40 MOV X21, X1
	0x03E25A44 MOV X19, X0
	0x03E25A48 TBNZ X8, 0x0, 0x3E25AC0
	0x03E25A4C ADRP X0, 0x2D0000
	0x03E25A50 LDR X0, [X0 + 0x170]
	0x03E25A54 BL 0x1C16CF4
	0x03E25A58 ADRP X0, 0x345000
	0x03E25A5C LDR X0, [X0 + 0xF20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1560]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53628928
	010 Add X0, X0, 2661
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1560], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_sortingLayerID(System.Int32 value)

Disassembly:
	0x03E25A60 BL 0x1C16CF4
	0x03E25A64 ADRP X0, 0x2CE000
	0x03E25A68 LDR X0, [X0 + 0x5A8]
	0x03E25A6C BL 0x1C16CF4
	0x03E25A70 ADRP X0, 0x345000
	0x03E25A74 LDR X0, [X0 + 0xF28]
	0x03E25A78 BL 0x1C16CF4
	0x03E25A7C ADRP X0, 0x2D0000
	0x03E25A80 LDR X0, [X0 + 0x278]
	0x03E25A84 BL 0x1C16CF4
	0x03E25A88 ADRP X0, 0x2CF000
	0x03E25A8C LDR X0, [X0 + 0xFE0]
	0x03E25A90 BL 0x1C16CF4
	0x03E25A94 ADRP X0, 0x316000
	0x03E25A98 LDR X0, [X0 + 0x900]
	0x03E25A9C BL 0x1C16CF4
	0x03E25AA0 ADRP X0, 0x2FA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1568]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53456896
	012 Add X0, X0, 1412
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1568], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.AdditionalCanvasShaderChannels get_additionalShaderChannels()

Disassembly:
	0x03E25AA4 LDR X0, [X0 + 0xB8]
	0x03E25AA8 BL 0x1C16CF4
	0x03E25AAC ADRP X0, 0x2CE000
	0x03E25AB0 LDR X0, [X0 + 0x988]
	0x03E25AB4 BL 0x1C16CF4
	0x03E25AB8 MOVZ W8, 0x1
	0x03E25ABC STRB W8, [X22 + 0x6C3]
	0x03E25AC0 STRH W31, [X31 + 0xC]
	0x03E25AC4 LDR X0, [X19 + 0x180]
	0x03E25AC8 MOV X1, X21
	0x03E25ACC MOV X2, X31
	0x03E25AD0 BL 0x321BA08
	0x03E25AD4 TBNZ X0, 0x0, 0x3E25D2C
	0x03E25AD8 ADRP X23, 0x2CE000
	0x03E25ADC LDR X23, [X23 + 0x988]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1576]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53481472
	010 Add X0, X0, 3156
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1576], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_additionalShaderChannels(UnityEngine.AdditionalCanvasShaderChannels value)

Disassembly:
	0x03E25AE0 CMP X21, 0x0
	0x03E25AE4 LDR X8, [X23]
	0x03E25AE8 CSEL X0, X8, X21, EQ
	0x03E25AEC CBZ X0, 0x3E25D48
	0x03E25AF0 ADRP X8, 0x2D0000
	0x03E25AF4 LDR X8, [X8 + 0x278]
	0x03E25AF8 ADRP X9, 0x316000
	0x03E25AFC MOV X3, X31
	0x03E25B00 LDR X8, [X8]
	0x03E25B04 LDR X8, [X8 + 0xB8]
	0x03E25B08 LDR X9, [X9 + 0x900]
	0x03E25B0C LDR X2, [X8]
	0x03E25B10 LDR X1, [X9]
	0x03E25B14 BL 0x32293BC
	0x03E25B18 LDR W8, [X19 + 0x128]
	0x03E25B1C MOV X21, X0
	0x03E25B20 CBNZ W8, 0x3E25B64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1584]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53563392
	012 Add X0, X0, 3946
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1584], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.String get_sortingLayerName()

Disassembly:
	0x03E25B24 CBZ X21, 0x3E25D48
	0x03E25B28 ADRP X8, 0x2CF000
	0x03E25B2C LDR X8, [X8 + 0xFE0]
	0x03E25B30 LDR X2, [X23]
	0x03E25B34 MOV X0, X21
	0x03E25B38 MOV X3, X31
	0x03E25B3C LDR X1, [X8]
	0x03E25B40 BL 0x32293BC
	0x03E25B44 CBZ X0, 0x3E25D48
	0x03E25B48 ADRP X8, 0x2FA000
	0x03E25B4C LDR X8, [X8 + 0xB8]
	0x03E25B50 LDR X2, [X23]
	0x03E25B54 MOV X3, X31
	0x03E25B58 LDR X1, [X8]
	0x03E25B5C BL 0x32293BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1592]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53473280
	010 Add X0, X0, 2764
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1592], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_sortingLayerName(System.String value)

Disassembly:
	0x03E25B60 MOV X21, X0
	0x03E25B64 LDR X22, [X19 + 0x150]
	0x03E25B68 CBZ X22, 0x3E25B7C
	0x03E25B6C LDR X8, [X23]
	0x03E25B70 STR X8, [X19 + 0x180]
	0x03E25B74 CBNZ X21, 0x3E25BB8
	0x03E25B78 B 0x3E25D48
	0x03E25B7C LDR W8, [X19 + 0x130]
	0x03E25B80 CBZ W8, 0x3E25C9C
	0x03E25B84 LDR X8, [X23]
	0x03E25B88 STR X8, [X19 + 0x180]
	0x03E25B8C ADRP X8, 0x345000
	0x03E25B90 LDR X8, [X8 + 0xF28]
	0x03E25B94 LDR X0, [X8]
	0x03E25B98 BL 0x1C16F10
	0x03E25B9C ADRP X8, 0x345000
	0x03E25BA0 LDR X8, [X8 + 0xF20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1600]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53620736
	012 Add X0, X0, 2832
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1600], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Canvas get_rootCanvas()

Disassembly:
	0x03E25BA4 MOV X1, X19
	0x03E25BA8 MOV X22, X0
	0x03E25BAC LDR X2, [X8]
	0x03E25BB0 BL 0x3E25D54
	0x03E25BB4 CBZ X21, 0x3E25D48
	0x03E25BB8 LDR W24, [X19 + 0x134]
	0x03E25BBC LDR W23, [X21 + 0x10]
	0x03E25BC0 CMP W24, 0x1
	0x03E25BC4 STR W23, [X19 + 0x198]
	0x03E25BC8 STR W23, [X19 + 0x194]
	0x03E25BCC B.LT 0x3E25BFC
	0x03E25BD0 ADRP X8, 0x2CE000
	0x03E25BD4 LDR X8, [X8 + 0x5A8]
	0x03E25BD8 LDR X0, [X8]
	0x03E25BDC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1608]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53481472
	010 Add X0, X0, 3207
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1608], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector2 get_renderingDisplaySize()

Disassembly:
	0x03E25BE0 CBNZ W8, 0x3E25BE8
	0x03E25BE4 BL 0x1C16DFC
	0x03E25BE8 MOV W0, W24
	0x03E25BEC MOV W1, W23
	0x03E25BF0 MOV X2, X31
	0x03E25BF4 BL 0x337EE94
	0x03E25BF8 MOV W23, W0
	0x03E25BFC CMP W23, 0x1
	0x03E25C00 B.LT 0x3E25CD0
	0x03E25C04 ADRP X27, 0x2D0000
	0x03E25C08 LDR X27, [X27 + 0x170]
	0x03E25C0C MOV W24, W31
	0x03E25C10 LDR X25, [X19 + 0x180]
	0x03E25C14 CBZ X25, 0x3E25D48
	0x03E25C18 LDR W26, [X25 + 0x10]
	0x03E25C1C MOV X0, X21
	0x03E25C20 MOV W1, W24
	0x03E25C24 MOV X2, X31
	0x03E25C28 BL 0x3222A1C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X8, [X20+1688]
	006 Move X19, X0
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -53481472
	011 Add X0, X0, 3244
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+1688], X0
	015 Add X1, X31, 8
	016 Move X0, X19
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move S0, [X31+8]
	019 Move S1, [X31+12]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Action`1<System.Int32> get_externBeginRenderOverlays()

Disassembly:
	0x03E25C70 MOV X1, X31
	0x03E25C74 BL 0x330A76C
	0x03E25C78 MOV X1, X0
	0x03E25C7C MOV X0, X25
	0x03E25C80 MOV X2, X31
	0x03E25C84 BL 0x321B938
	0x03E25C88 STR X0, [X19 + 0x180]
	0x03E25C8C ADD W24, W24, 0x1
	0x03E25C90 CMP W23, W24
	0x03E25C94 B.NE 0x3E25C10
	0x03E25C98 B 0x3E25CD0
	0x03E25C9C LDR W2, [X19 + 0x134]
	0x03E25CA0 CMP W2, 0x1
	0x03E25CA4 B.LT 0x3E25CCC
	0x03E25CA8 CBZ X21, 0x3E25D48
	0x03E25CAC LDR W8, [X21 + 0x10]
	0x03E25CB0 CMP W8, W2
	0x03E25CB4 B.LE 0x3E25CCC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5C4000
	005 Move X20, 0x33E000
	006 Move W8, [X19+1616]
	007 Move X20, [X20+1192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x33E000
	013 Move X0, [X0+1192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1616], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8+16]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_externBeginRenderOverlays(System.Action`1<System.Int32> value)

Disassembly:
	0x03E25CB8 MOV X0, X21
	0x03E25CBC MOV W1, W31
	0x03E25CC0 MOV X3, X31
	0x03E25CC4 BL 0x3228DE4
	0x03E25CC8 MOV X21, X0
	0x03E25CCC STR X21, [X19 + 0x180]
	0x03E25CD0 LDR X0, [X19 + 0x100]
	0x03E25CD4 CBZ X0, 0x3E25CE4
	0x03E25CD8 LDR X1, [X19 + 0x180]
	0x03E25CDC MOV X2, X31
	0x03E25CE0 BL 0x3C3CF58
	0x03E25CE4 LDR X8, [X19 + 0x180]
	0x03E25CE8 CBZ X8, 0x3E25D48
	0x03E25CEC LDR W9, [X19 + 0x194]
	0x03E25CF0 LDR W8, [X8 + 0x10]
	0x03E25CF4 CMP W9, W8
	0x03E25CF8 B.LE 0x3E25D08
	0x03E25CFC STR W8, [X19 + 0x198]
	0x03E25D00 STR W8, [X19 + 0x194]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X21, 0x33E000
	007 Move W8, [X20+1617]
	008 Move X21, [X21+1192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33E000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1617], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8+16], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Action`2<System.Int32, System.Int32> get_externRenderOverlaysBefore()

Disassembly:
	0x03E25D04 B 0x3E25D18
	0x03E25D08 LDR W9, [X19 + 0x198]
	0x03E25D0C CMP W9, W8
	0x03E25D10 B.LE 0x3E25D18
	0x03E25D14 STR W8, [X19 + 0x198]
	0x03E25D18 TBZ X20, 0x0, 0x3E25D24
	0x03E25D1C MOV X0, X19
	0x03E25D20 BL 0x3E25DF4
	0x03E25D24 MOV X0, X19
	0x03E25D28 BL 0x3E25E74
	0x03E25D2C LDP X20, X19, [X31 + 0x50]
	0x03E25D30 LDP X22, X21, [X31 + 0x40]
	0x03E25D34 LDP X24, X23, [X31 + 0x30]
	0x03E25D38 LDP X26, X25, [X31 + 0x20]
	0x03E25D3C LDP X30, X27, [X31 + 0x10]
	0x03E25D40 ADD X31, X31, 0x60
	0x03E25D44 RET
	0x03E25D48 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5C4000
	005 Move X20, 0x33E000
	006 Move W8, [X19+1618]
	007 Move X20, [X20+1192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x33E000
	013 Move X0, [X0+1192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1618], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8+24]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_externRenderOverlaysBefore(System.Action`2<System.Int32, System.Int32> value)

Disassembly:
	0x03E25D4C MOV W2, W31
	0x03E25D50 B 0x3E25A1C
	0x03E25D54 STP X30, X21, [X31 - 0x20]!
	0x03E25D58 STP X20, X19, [X31 + 0x10]
	0x03E25D5C LDR X8, [X2 + 0x8]
	0x03E25D60 STP X1, X2, [X0 + 0x20]
	0x03E25D64 MOV X19, X0
	0x03E25D68 MOV X20, X1
	0x03E25D6C STR X8, [X0 + 0x10]
	0x03E25D70 LDRB W21, [X2 + 0x52]
	0x03E25D74 STR X0, [X0 + 0x40]
	0x03E25D78 MOV X0, X2
	0x03E25D7C BL 0x1C16D84
	0x03E25D80 TBZ X0, 0x0, 0x3E25D98
	0x03E25D84 CMP W21, 0x3
	0x03E25D88 B.NE 0x3E25DB4
	0x03E25D8C ADRP X8, 0xFFFFFFFFFDDF0000
	0x03E25D90 ADD X8, X8, 0x100
	0x03E25D94 B 0x3E25DA8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X21, 0x33E000
	007 Move W8, [X20+1619]
	008 Move X21, [X21+1192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33E000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1619], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8+24], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Action`1<System.Int32> get_externEndRenderOverlays()

Disassembly:
	0x03E25D98 CMP W21, 0x2
	0x03E25D9C B.NE 0x3E25DB0
	0x03E25DA0 ADRP X8, 0xFFFFFFFFFDDF0000
	0x03E25DA4 ADD X8, X8, 0xD8
	0x03E25DA8 STR X8, [X19 + 0x18]
	0x03E25DAC B 0x3E25DC4
	0x03E25DB0 CBZ X20, 0x3E25DDC
	0x03E25DB4 LDR X8, [X19 + 0x10]
	0x03E25DB8 LDR X9, [X19 + 0x20]
	0x03E25DBC STR X8, [X19 + 0x18]
	0x03E25DC0 STR X9, [X19 + 0x40]
	0x03E25DC4 ADRP X8, 0xFFFFFFFFFDDF0000
	0x03E25DC8 ADD X8, X8, 0x70
	0x03E25DCC STR X8, [X19 + 0x38]
	0x03E25DD0 LDP X20, X19, [X31 + 0x10]
	0x03E25DD4 LDP X30, X21, [X31], #0x20
	0x03E25DD8 RET
	0x03E25DDC ADRP X1, 0xFFFFFFFFFCCF6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5C4000
	005 Move X20, 0x33E000
	006 Move W8, [X19+1620]
	007 Move X20, [X20+1192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x33E000
	013 Move X0, [X0+1192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1620], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8+32]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_externEndRenderOverlays(System.Action`1<System.Int32> value)

Disassembly:
	0x03E25DE0 ADD X1, X1, 0xEE3
	0x03E25DE4 MOV X0, X31
	0x03E25DE8 BL 0x1C16F3C
	0x03E25DEC MOV X1, X31
	0x03E25DF0 BL 0x1C16DEC
	0x03E25DF4 STP X30, X21, [X31 - 0x20]!
	0x03E25DF8 STP X20, X19, [X31 + 0x10]
	0x03E25DFC ADRP X20, 0x5C3000
	0x03E25E00 ADRP X21, 0x345000
	0x03E25E04 LDRB W8, [X20 + 0x6EF]
	0x03E25E08 LDR X21, [X21 + 0xF30]
	0x03E25E0C MOV X19, X0
	0x03E25E10 TBNZ X8, 0x0, 0x3E25E34
	0x03E25E14 ADRP X0, 0x334000
	0x03E25E18 LDR X0, [X0 + 0x48]
	0x03E25E1C BL 0x1C16CF4
	0x03E25E20 ADRP X0, 0x345000
	0x03E25E24 LDR X0, [X0 + 0xF30]
	0x03E25E28 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X21, 0x33E000
	007 Move W8, [X20+1621]
	008 Move X21, [X21+1192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33E000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1621], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8+32], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void SetExternalCanvasEnabled(System.Boolean enabled)

Disassembly:
	0x03E25E2C MOVZ W8, 0x1
	0x03E25E30 STRB W8, [X20 + 0x6EF]
	0x03E25E34 LDR X0, [X21]
	0x03E25E38 MOV X1, X19
	0x03E25E3C MOV X2, X31
	0x03E25E40 BL 0x3E252BC
	0x03E25E44 LDR X0, [X19 + 0x148]
	0x03E25E48 CBZ X0, 0x3E25E68
	0x03E25E4C ADRP X8, 0x334000
	0x03E25E50 LDR X8, [X8 + 0x48]
	0x03E25E54 LDR X1, [X19 + 0x180]
	0x03E25E58 LDP X20, X19, [X31 + 0x10]
	0x03E25E5C LDR X2, [X8]
	0x03E25E60 LDP X30, X21, [X31], #0x20
	0x03E25E64 B 0x2729DBC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1624]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53596160
	010 Add X0, X0, 3291
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1624], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Camera get_worldCamera()

Disassembly:
	0x03E25E68 LDP X20, X19, [X31 + 0x10]
	0x03E25E6C LDP X30, X21, [X31], #0x20
	0x03E25E70 RET
	0x03E25E74 SUB X31, X31, 0x160
	0x03E25E78 STP X29, X30, [X31 + 0x130]
	0x03E25E7C STP X22, X21, [X31 + 0x140]
	0x03E25E80 STP X20, X19, [X31 + 0x150]
	0x03E25E84 ADRP X20, 0x5C3000
	0x03E25E88 ADRP X22, 0x2CE000
	0x03E25E8C LDRB W8, [X20 + 0x6F3]
	0x03E25E90 LDR X22, [X22 + 0x598]
	0x03E25E94 MOV X19, X0
	0x03E25E98 TBNZ X8, 0x0, 0x3E25EBC
	0x03E25E9C ADRP X0, 0x2F5000
	0x03E25EA0 LDR X0, [X0 + 0xDF8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1632]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53555200
	010 Add X0, X0, 2572
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1632], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_normalizedSortingGridSize()

Disassembly:
	0x03E25EA4 BL 0x1C16CF4
	0x03E25EA8 ADRP X0, 0x2CE000
	0x03E25EAC LDR X0, [X0 + 0x598]
	0x03E25EB0 BL 0x1C16CF4
	0x03E25EB4 MOVZ W8, 0x1
	0x03E25EB8 STRB W8, [X20 + 0x6F3]
	0x03E25EBC LDR X0, [X22]
	0x03E25EC0 LDR X20, [X19 + 0x108]
	0x03E25EC4 LDR W8, [X0 + 0xE0]
	0x03E25EC8 CBNZ W8, 0x3E25ED0
	0x03E25ECC BL 0x1C16DFC
	0x03E25ED0 MOV X0, X20
	0x03E25ED4 MOV X1, X31
	0x03E25ED8 MOV X2, X31
	0x03E25EDC BL 0x3C354F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C4000
	005 Move X1, [X20+1640]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53448704
	010 Add X0, X0, 937
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1640], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_normalizedSortingGridSize(System.Single value)

Disassembly:
	0x03E25EE0 TBZ X0, 0x0, 0x3E26254
	0x03E25EE4 LDR X0, [X19 + 0x108]
	0x03E25EE8 CBZ X0, 0x3E26268
	0x03E25EEC MOV X1, X31
	0x03E25EF0 BL 0x3E450E8
	0x03E25EF4 LDR X8, [X22]
	0x03E25EF8 MOV X20, X0
	0x03E25EFC LDR W9, [X8 + 0xE0]
	0x03E25F00 CBNZ W9, 0x3E25F0C
	0x03E25F04 MOV X0, X8
	0x03E25F08 BL 0x1C16DFC
	0x03E25F0C MOV X0, X20
	0x03E25F10 MOV X1, X31
	0x03E25F14 MOV X2, X31
	0x03E25F18 BL 0x3C354F8
	0x03E25F1C TBZ X0, 0x0, 0x3E26254
	0x03E25F20 LDRB W8, [X19 + 0x1C0]
	0x03E25F24 CBNZ W8, 0x3E26254
	0x03E25F28 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C4000
	006 Move X1, [X20+1648]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53628928
	012 Add X0, X0, 2702
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1648], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: UnityEngine.Material GetDefaultCanvasMaterial()

Disassembly:
	0x03E25F2C STRB W8, [X19 + 0x1C0]
	0x03E25F30 ADRP X21, 0x2F5000
	0x03E25F34 LDR X21, [X21 + 0xDF8]
	0x03E25F38 LDR X0, [X21]
	0x03E25F3C LDR W8, [X0 + 0xE0]
	0x03E25F40 CBNZ W8, 0x3E25F48
	0x03E25F44 BL 0x1C16DFC
	0x03E25F48 MOV X0, X31
	0x03E25F4C BL 0x3E4FF90
	0x03E25F50 LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x5C4000
	004 Move X0, [X19+1656]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -53489664
	008 Add X0, X0, 2354
	009 Call 0x1C17CB8
	010 Move [X19+1656], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Material GetETC1SupportedCanvasMaterial()

Disassembly:
	0x03E25F54 MOV X20, X0
	0x03E25F58 LDR W9, [X8 + 0xE0]
	0x03E25F5C CBNZ W9, 0x3E25F68
	0x03E25F60 MOV X0, X8
	0x03E25F64 BL 0x1C16DFC
	0x03E25F68 MOV X0, X20
	0x03E25F6C MOV X1, X31
	0x03E25F70 MOV X2, X31
	0x03E25F74 BL 0x3C354F8
	0x03E25F78 TBZ X0, 0x0, 0x3E2604C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x5C4000
	004 Move X0, [X19+1664]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -53604352
	008 Add X0, X0, 3097
	009 Call 0x1C17CB8
	010 Move [X19+1664], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void ForceUpdateCanvases()

Disassembly:
	0x03E25F7C MOV X0, X19
	0x03E25F80 MOV X1, X31
	0x03E25F84 BL 0x3C32ECC
	0x03E25F88 LDR X8, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Call Canvas.SendPreWillRenderCanvases
	003 Move X30, [X31+16]
	004 Call Canvas.SendWillRenderCanvases
	005 Return 

Method: System.Void SendPreWillRenderCanvases()

Disassembly:
	0x03E25F8C MOV X20, X0
	0x03E25F90 LDR W9, [X8 + 0xE0]
	0x03E25F94 CBNZ W9, 0x3E25FA0
	0x03E25F98 MOV X0, X8
	0x03E25F9C BL 0x1C16DFC
	0x03E25FA0 MOV X0, X31
	0x03E25FA4 BL 0x3E4FF90
	0x03E25FA8 CBZ X0, 0x3E26268
	0x03E25FAC LDR X8, [X22]
	0x03E25FB0 LDR X21, [X0 + 0x40]
	0x03E25FB4 LDR W9, [X8 + 0xE0]
	0x03E25FB8 CBNZ W9, 0x3E25FC4
	0x03E25FBC MOV X0, X8
	0x03E25FC0 BL 0x1C16DFC
	0x03E25FC4 MOV X0, X20
	0x03E25FC8 MOV X1, X21
	0x03E25FCC MOV X2, X31
	0x03E25FD0 BL 0x3C3883C
	0x03E25FD4 TBZ X0, 0x0, 0x3E2604C
	0x03E25FD8 BL 0x3E25410
	0x03E25FDC CBZ X0, 0x3E26268
	0x03E25FE0 LDR W8, [X0 + 0x10]
	0x03E25FE4 CMP W8, 0x1
	0x03E25FE8 B.LT 0x3E2604C
	0x03E25FEC LDR X0, [X19 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5C4000
	005 Move X20, 0x33E000
	006 Move W8, [X19+1672]
	007 Move X20, [X20+1192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x33E000
	013 Move X0, [X0+1192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1672], W8
	017 Move X8, [X20]
	018 Move X8, [X8+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfEqual {29}
	022 Move X2, [X8+24]
	023 Move X0, [X8+64]
	024 Move X1, [X8+40]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 CallNoReturn X2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void SendWillRenderCanvases()

Disassembly:
	0x03E25FF0 MOVZ W8, 0x1
	0x03E25FF4 STRB W8, [X19 + 0x211]
	0x03E25FF8 CBZ X0, 0x3E26268
	0x03E25FFC LDR W2, [X19 + 0x194]
	0x03E26000 MOV W1, W31
	0x03E26004 MOV X3, X31
	0x03E26008 BL 0x3228DE4
	0x03E2600C MOV X20, X0
	0x03E26010 BL 0x3E25410
	0x03E26014 LDR X8, [X19 + 0x180]
	0x03E26018 CBZ X8, 0x3E26268
	0x03E2601C LDR W1, [X19 + 0x194]
	0x03E26020 MOV X21, X0
	0x03E26024 MOV X0, X8
	0x03E26028 MOV X2, X31
	0x03E2602C BL 0x322B484
	0x03E26030 MOV X2, X0
	0x03E26034 MOV X0, X20
	0x03E26038 MOV X1, X21
	0x03E2603C MOV X3, X31
	0x03E26040 BL 0x32274B8
	0x03E26044 MOV X21, X0
	0x03E26048 B 0x3E26054
	0x03E2604C LDR X21, [X19 + 0x180]
	0x03E26050 STRB W31, [X19 + 0x211]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x5C4000
	005 Move X20, 0x33E000
	006 Move W8, [X19+1673]
	007 Call 0x3EB2A44
	008 Return 
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x33D000
	014 Move X0, [X0+1192]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+1673], W8
	018 Move X8, [X20]
	019 Move X8, [X8+184]
	020 Move X8, [X8+8]
	021 Compare X8, 0
	022 JumpIfEqual {30}
	023 Move X2, [X8+24]
	024 Move X0, [X8+64]
	025 Move X1, [X8+40]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 

Method: System.Void BeginRenderExtraOverlays(System.Int32 displayIndex)

Disassembly:
	0x03E26054 LDR W8, [X19 + 0x11C]
	0x03E26058 MOV X20, X21
	0x03E2605C CMP W8, 0x2
	0x03E26060 B.NE 0x3E26080
	0x03E26064 CBZ X21, 0x3E26268
	0x03E26068 LDR W2, [X21 + 0x10]
	0x03E2606C LDRH W1, [X19 + 0x120]
	0x03E26070 MOV X0, X31
	0x03E26074 MOV X3, X31
	0x03E26078 BL 0x322EAF4
	0x03E2607C MOV X20, X0
	0x03E26080 MOV X0, X21
	0x03E26084 MOV X1, X31
	0x03E26088 BL 0x32277A8
	0x03E2608C LDR X8, [X22]
	0x03E26090 LDR X22, [X19 + 0x110]
	0x03E26094 MOV W21, W0
	0x03E26098 LDR W9, [X8 + 0xE0]
	0x03E2609C CBNZ W9, 0x3E260A8
	0x03E260A0 MOV X0, X8
	0x03E260A4 BL 0x1C16DFC
	0x03E260A8 MOV X0, X22
	0x03E260AC MOV X1, X31
	0x03E260B0 MOV X2, X31
	0x03E260B4 BL 0x3C354F8
	0x03E260B8 TBZ X0, 0x0, 0x3E260D0
	0x03E260BC LDR X0, [X19 + 0x110]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C3000
	005 Move W8, [X20+1720]
	006 Move W19, W0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x33D000
	010 Move X0, [X0+1192]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1720], W8
	014 Move X8, 0x33D000
	015 Move X8, [X8+1192]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move X8, [X8+16]
	019 Compare X8, 0
	020 JumpIfEqual {29}
	021 Move X3, [X8+24]
	022 Move X0, [X8+64]
	023 Move X2, [X8+40]
	024 Move W1, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 CallNoReturn X3
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void RenderExtraOverlaysBefore(System.Int32 displayIndex, System.Int32 sortingOrder)

Disassembly:
	0x03E260C0 CBZ X0, 0x3E26268
	0x03E260C4 AND W1, W21, 0x1
	0x03E260C8 MOV X2, X31
	0x03E260CC BL 0x3C32410
	0x03E260D0 LDRB W8, [X19 + 0x1D0]
	0x03E260D4 CBNZ W8, 0x3E260EC
	0x03E260D8 LDR X8, [X19 + 0x180]
	0x03E260DC STR W31, [X19 + 0x1E4]
	0x03E260E0 CBZ X8, 0x3E26268
	0x03E260E4 LDR W8, [X8 + 0x10]
	0x03E260E8 STR W8, [X19 + 0x1E8]
	0x03E260EC LDR X0, [X19 + 0x108]
	0x03E260F0 CBZ X0, 0x3E26268
	0x03E260F4 LDR X8, [X0]
	0x03E260F8 LDR X9, [X8 + 0x2E8]
	0x03E260FC LDR X1, [X8 + 0x2F0]
	0x03E26100 BLR X9
	0x03E26104 TBNZ X21, 0x0, 0x3E2622C
	0x03E26108 LDR X0, [X19 + 0x108]
	0x03E2610C CBZ X0, 0x3E26268
	0x03E26110 MOV X1, X31
	0x03E26114 BL 0x3CDB488
	0x03E26118 CBZ X0, 0x3E26268
	0x03E2611C MOV X1, X31
	0x03E26120 BL 0x3C3E51C
	0x03E26124 LDR X0, [X19 + 0x108]
	0x03E26128 CBZ X0, 0x3E26268
	0x03E2612C ADD X8, X31, 0x70
	0x03E26130 MOV V0.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C3000
	006 Move W8, [X21+1721]
	007 Move W19, W1
	008 Move W20, W0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x33D000
	012 Move X0, [X0+1192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+1721], W8
	016 Move X8, 0x33D000
	017 Move X8, [X8+1192]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move X8, [X8+24]
	021 Compare X8, 0
	022 JumpIfEqual {33}
	023 Move X4, [X8+24]
	024 Move X0, [X8+64]
	025 Move X3, [X8+40]
	026 Move W1, W20
	027 Move W2, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X4
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

Method: System.Void EndRenderExtraOverlays(System.Int32 displayIndex)

Disassembly:
	0x03E26134 MOV V1.16B, V3.16B
	0x03E26138 MOV X1, X31
	0x03E2613C ADD X22, X31, 0x70
	0x03E26140 BL 0x3E45CAC
	0x03E26144 ADD X0, X31, 0xD8
	0x03E26148 ADD X1, X31, 0x70
	0x03E2614C MOVZ W2, 0x58
	0x03E26150 BL 0x3EB1AC0
	0x03E26154 LDUR W8, [X22 + 0x59]
	0x03E26158 LDR W9, [X31 + 0xCC]
	0x03E2615C MOV X0, X19
	0x03E26160 STR W8, [X31 + 0xD0]
	0x03E26164 STUR W9, [X22 + 0x63]
	0x03E26168 BL 0x3E2584C
	0x03E2616C MOV X21, X0
	0x03E26170 ADD X0, X31, 0x70
	0x03E26174 ADD X1, X31, 0xD8
	0x03E26178 MOVZ W2, 0x58
	0x03E2617C BL 0x3EB1AC0
	0x03E26180 LDR W8, [X31 + 0xD0]
	0x03E26184 LDUR W9, [X22 + 0x63]
	0x03E26188 MOV X0, X19
	0x03E2618C MOV X1, X31
	0x03E26190 STR W8, [X31 + 0x68]
	0x03E26194 STUR W9, [X31 + 0x6B]
	0x03E26198 BL 0x3C32ECC
	0x03E2619C CBZ X21, 0x3E26268

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C3000
	005 Move W8, [X20+1722]
	006 Move W19, W0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x33D000
	010 Move X0, [X0+1192]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1722], W8
	014 Move X8, 0x33D000
	015 Move X8, [X8+1192]
	016 Move X8, [X8]
	017 Move X8, [X8+184]
	018 Move X8, [X8+32]
	019 Compare X8, 0
	020 JumpIfEqual {29}
	021 Move X3, [X8+24]
	022 Move X0, [X8+64]
	023 Move X2, [X8+40]
	024 Move W1, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 CallNoReturn X3
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E261A0 MOV X22, X0
	0x03E261A4 ADD X0, X31, 0x8

ISIL:
	001 Move X1, X31
	002 Call Behaviour..ctor, X0
	003 Return 

Method: System.Void get_pixelRect_Injected(out UnityEngine.Rect ret)

Disassembly:
	0x03E255D0 MOVZ W10, 0x1
	0x03E255D4 LDR X8, [X8 + 0xB8]
	0x03E255D8 LDR X8, [X8]
	0x03E255DC STRB W10, [X19 + 0x191]
	0x03E255E0 STP X8, X9, [X19 + 0x180]
	0x03E255E4 LDR X8, [X23]
	0x03E255E8 STR X8, [X19 + 0x1F8]
	0x03E255EC LDR X0, [X22]
	0x03E255F0 BL 0x1C16F10
	0x03E255F4 MOV X1, X31
	0x03E255F8 MOV X20, X0
	0x03E255FC BL 0x3C63690
	0x03E25600 STR X20, [X19 + 0x218]
	0x03E25604 LDR X0, [X21]
	0x03E25608 LDR W8, [X0 + 0xE0]
	0x03E2560C CBNZ W8, 0x3E25614
	0x03E25610 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1680]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53547008
	012 Add X0, X0, 1946
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1680], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_renderingDisplaySize_Injected(out UnityEngine.Vector2 ret)

Disassembly:
	0x03E25C2C CBZ X22, 0x3E25D48
	0x03E25C30 MOV W3, W0
	0x03E25C34 LDR X8, [X22 + 0x18]
	0x03E25C38 LDR X0, [X22 + 0x40]
	0x03E25C3C LDR X4, [X22 + 0x28]
	0x03E25C40 MOV X1, X25
	0x03E25C44 MOV W2, W26
	0x03E25C48 BLR X8
	0x03E25C4C ANDS W31, W0, 0xFFFF
	0x03E25C50 STRH W0, [X31 + 0xC]
	0x03E25C54 B.EQ 0x3E25C8C
	0x03E25C58 LDR X0, [X27]
	0x03E25C5C LDR X25, [X19 + 0x180]
	0x03E25C60 LDR W8, [X0 + 0xE0]
	0x03E25C64 CBNZ W8, 0x3E25C6C
	0x03E25C68 BL 0x1C16DFC
	0x03E25C6C ADD X0, X31, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C4000
	006 Move X2, [X21+1688]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53481472
	012 Add X0, X0, 3244
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1688], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

